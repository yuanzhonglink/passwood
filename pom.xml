<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <!--pom的模型版本-->
    <modelVersion>4.0.0</modelVersion>

    <!--项目标识-->
    <groupId>com.pass</groupId>
    <artifactId>passwood</artifactId>

    <packaging>pom</packaging>

    <!--项目版本-->
    <version>1.0-SNAPSHOT</version>

    <!--模块-->
    <modules>
        <module>pass_consul_client</module>
        <module>pass_consul_server</module>
        <module>pass_util</module>
        <module>pass_grpc_server</module>
        <module>pass_grpc_client</module>
        <module>pass_curator</module>
        <module>pass_kafka_server</module>
        <module>pass_kafka_client</module>
        <module>pass_dubbo_server</module>
        <module>pass_dubbo_client</module>
        <module>pass_dubbo_api</module>
        <module>pass_ftl</module>
        <module>pass_prometheus</module>
        <module>pass_websocket</module>
        <module>pass_prometheus_alert</module>
        <module>pass_prometheus_exporter</module>
        <module>pass_rabbitmq</module>
        <module>pass_ldap</module>
        <module>pass_xss</module>
        <module>pass_sonar</module>
        <module>pass_poi</module>
        <module>pass_pdf</module>
        <module>pass_docker</module>
    </modules>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.4.RELEASE</version>
        <relativePath />
    </parent>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
        <lombok.version>1.16.18</lombok.version>
        <slf4j.version>1.7.25</slf4j.version>
        <commons-codec.version>1.11</commons-codec.version>
        <druid.version>1.1.4</druid.version>
        <mysql.version>8.0.16</mysql.version>
        <junit.version>4.13.2</junit.version>
        <spring-cloud.version>Greenwich.SR1</spring-cloud.version>
        <truelicense.version>1.32</truelicense.version>
        <fastjson.version>1.2.54</fastjson.version>
        <consul-api.version>1.4.2</consul-api.version>
        <protobuf-java.version>3.5.1</protobuf-java.version>
        <spring-amqp.version>2.1.4.RELEASE</spring-amqp.version>
        <dubbo-spring-boot>1.0.0</dubbo-spring-boot>
        <zookeeper-version>3.4.14</zookeeper-version>
        <jfree-version>1.0.13</jfree-version>
        <yaml-version>1.26</yaml-version>
        <poi-version>3.17</poi-version>
        <ooxml-schemas-version>1.3</ooxml-schemas-version>
        <prometheus-simpleclient-version>0.3.0</prometheus-simpleclient-version>
        <bocloud-common-version>4.3.0-RELEASE</bocloud-common-version>
        <jpa-version>2.1.4.RELEASE</jpa-version>
        <swagger2-version>2.7.0</swagger2-version>
        <reflections-version>0.9.10</reflections-version>
        <spring-jdbc>5.1.6.RELEASE</spring-jdbc>
        <itextpdf>5.5.13</itextpdf>
        <itext-asian>5.2.0</itext-asian>
    </properties>

    <!-- 引入的包存在于每个model中 -->
    <dependencies>
        <!--支持 @ConfigurationProperties 注解-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
        </dependency>

        <!-- springboot web包 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <!-- springboot 基础包 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>

        <!-- freemarker 依赖 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-freemarker</artifactId>
        </dependency>
    </dependencies>

    <!--管理引入包的版本：每个model中进行引入，不过不用引入version-->
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!--rabbitMQ-->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-amqp</artifactId>
                <version>${spring-amqp.version}</version>
            </dependency>

            <!-- Spring Boot Dubbo 依赖 -->
            <dependency>
                <groupId>io.dubbo.springboot</groupId>
                <artifactId>spring-boot-starter-dubbo</artifactId>
                <version>${dubbo-spring-boot}</version>
            </dependency>

            <!--添加Swagger依赖 -->
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger2</artifactId>
                <version>${swagger2-version}</version>
            </dependency>
            <!--添加Swagger-UI依赖 -->
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger-ui</artifactId>
                <version>${swagger2-version}</version>
            </dependency>

            <!-- 引入poi，解析workbook视图 -->
            <dependency>
                <groupId>org.apache.poi</groupId>
                <artifactId>poi</artifactId>
                <version>${poi-version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.poi</groupId>
                <artifactId>poi-ooxml</artifactId>
                <version>${poi-version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.poi</groupId>
                <artifactId>poi-scratchpad</artifactId>
                <version>${poi-version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.poi</groupId>
                <artifactId>poi-ooxml-schemas</artifactId>
                <version>${poi-version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.poi</groupId>
                <artifactId>ooxml-schemas</artifactId>
                <version>${ooxml-schemas-version}</version>
            </dependency>

            <!--lombok-->
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
            </dependency>

            <dependency>
                <groupId>commons-codec</groupId>
                <artifactId>commons-codec</artifactId>
                <version>${commons-codec.version}</version>
            </dependency>

            <!-- 数据库连接池 -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid</artifactId>
                <version>${druid.version}</version>
            </dependency>
            <!-- Mysql Connector -->
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql.version}</version>
            </dependency>

            <!-- 测试 -->
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
            </dependency>

            <!-- license -->
            <dependency>
                <groupId>de.schlichtherle.truelicense</groupId>
                <artifactId>truelicense-core</artifactId>
                <version>${truelicense.version}</version>
            </dependency>

            <!--alibaba.fastjson-->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>${fastjson.version}</version>
            </dependency>

            <!-- consul API -->
            <dependency>
                <groupId>com.ecwid.consul</groupId>
                <artifactId>consul-api</artifactId>
                <version>${consul-api.version}</version>
            </dependency>

            <!-- protobuf -->
            <dependency>
                <groupId>com.google.protobuf</groupId>
                <artifactId>protobuf-java</artifactId>
                <version>${protobuf-java.version}</version>
            </dependency>

            <!-- zookeeper -->
            <dependency>
                <groupId>org.apache.zookeeper</groupId>
                <artifactId>zookeeper</artifactId>
                <version>${zookeeper-version}</version>
            </dependency>

            <!-- jfree -->
            <dependency>
                <groupId>jfree</groupId>
                <artifactId>jfreechart</artifactId>
                <version>${jfree-version}</version>
            </dependency>

            <!-- yaml -->
            <dependency>
                <groupId>org.yaml</groupId>
                <artifactId>snakeyaml</artifactId>
                <version>${yaml-version}</version>
            </dependency>

            <!-- prometheus-simpleclient -->
            <dependency>
                <groupId>io.prometheus</groupId>
                <artifactId>simpleclient_httpserver</artifactId>
                <version>${prometheus-simpleclient-version}</version>
            </dependency>
            <dependency>
                <groupId>io.prometheus</groupId>
                <artifactId>simpleclient</artifactId>
                <version>${prometheus-simpleclient-version}</version>
            </dependency>
            <dependency>
                <groupId>io.prometheus</groupId>
                <artifactId>simpleclient_hotspot</artifactId>
                <version>${prometheus-simpleclient-version}</version>
            </dependency>

            <!-- 博云 -->
            <dependency>
                <groupId>com.bocloud</groupId>
                <artifactId>bocloud.bre.common</artifactId>
                <version>${bocloud-common-version}</version>
            </dependency>

            <!-- springboot JPA -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-data-jpa</artifactId>
                <version>${jpa-version}</version>
            </dependency>

            <!-- 反射使用 -->
            <dependency>
                <groupId>org.reflections</groupId>
                <artifactId>reflections</artifactId>
                <version>${reflections-version}</version>
            </dependency>

            <!-- Spring-jdbc -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-jdbc</artifactId>
                <version>${spring-jdbc}</version>
            </dependency>

            <!-- pdf生成类库 -->
            <dependency>
                <groupId>com.itextpdf</groupId>
                <artifactId>itextpdf</artifactId>
                <version>${itextpdf}</version>
            </dependency>
            <dependency>
                <groupId>com.itextpdf</groupId>
                <artifactId>itext-asian</artifactId>
                <version>${itext-asian}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <profiles>
        <!--多环境配置-->
        <profile>
            <id>uat</id>
            <properties>
                <spring.profiles.active>uat</spring.profiles.active>
            </properties>
            <!--默认选中-->
            <!--<activation>-->
                <!--<activeByDefault>true</activeByDefault>-->
            <!--</activation>-->
        </profile>
    </profiles>
</project>
